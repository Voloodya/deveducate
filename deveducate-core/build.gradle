plugins {
    id 'org.springframework.boot' version '2.4.12'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'application'
}

group = 'ru.cinimex'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

//configurations {
//
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.4")
    set('queryDslVersion', '4.2.2')
    set('generatedSourceDir', "$buildDir/generated-source")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.liquibase:liquibase-core'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    runtimeOnly 'org.postgresql:postgresql'
    //compileOnly 'joda-time:joda-time:2.2'

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.12'
    implementation group: 'ma.glasnost.orika', name: 'orika-core', version: '1.5.4'

    implementation 'io.swagger:swagger-annotations:1.6.3'
    implementation group: 'io.swagger', name: 'swagger-annotations', version: '1.6.2'
    // QueryDSL
    implementation "com.querydsl:querydsl-jpa"
    annotationProcessor("com.querydsl:querydsl-apt::jpa")
    annotationProcessor("com.querydsl:querydsl-jpa-codegen:4.4.0")

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
tasks.withType(JavaCompile) {
    delete "${generatedSourceDir}"
    options.annotationProcessorGeneratedSourcesDirectory = file("${generatedSourceDir}")
}

sourceSets {
    generated {
        java {
            srcDirs = ["${generatedSourceDir}"]
        }
    }
}

bootJar {
    baseName 'deveducate'
}

test {
    useJUnitPlatform()
}
